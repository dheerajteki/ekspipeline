version: 0.2
phases:
  install:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
      - echo Installing kubectl
      - curl -o kubectl https://amazon-eks.s3.$AWS_DEFAULT_REGION.amazonaws.com/1.15.10/2020-02-22/bin/darwin/amd64/kubectl
      - chmod +x ./kubectl
      - kubectl version --short --client
  pre_build:
    commands:
      - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION
      - cat ~/.kube/config
      - PRODUCT_TAG="$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
      # Updating Docker Image tag in your Kubernetes Deployment Manifest
      - echo "Update Image tag in kubernetes manifest"
      - sed -i "s@PRODUCT_CONTAINER_IMAGE@'$ECR_PRODUCT_REPOSITORY_URI:$PRODUCT_TAG'@g" k8s-microservices-full.yaml
      - echo $PRODUCT_TAG
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - yum install maven -y
      - echo "DOCKER VERSION"
      - docker version
      - mvn clean install
      # Build the Product Docker Image
      - cd product && docker build -t $ECR_PRODUCT_REPOSITORY_URI:$PRODUCT_TAG . && cd ..
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $ECR_PRODUCT_REPOSITORY_URI:$PRODUCT_TAG
      - echo Applying changes to deployment
      - kubectl apply -f k8s-microservices-full.yaml
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' "$ECR_PRODUCT_REPOSITORY_URI:$PRODUCT_TAG" | tee imagedefinitions.json
artifacts:
  files: imagedefinitions.json
